# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ieOYWKDXZ7Kxt8_dCglsHHmZMkkwzmBE
"""

import numpy as np
import pandas as pd
dataset = pd.read_csv('pima-indians-diabetes.data.csv')

dataset.head(2)

import seaborn as sns
import matplotlib.pyplot as plt

dataset.describe(include='all')

sns.pairplot(dataset, hue='Y')

sns.heatmap(dataset.corr(), annot=True)

X = dataset.iloc[:,0:8]
Y = dataset.iloc[:,8]
X.head(2)

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X = sc.fit_transform(X)
X

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3)

from keras import Sequential
from keras.layers import Dense

classifier = Sequential()
classifier.add(Dense(4, activation='relu', kernel_initializer='random_normal', input_dim=8))
classifier.add(Dense(4, activation='relu', kernel_initializer='random_normal'))
classifier.add(Dense(1, activation='sigmoid', kernel_initializer='random_normal'))

classifier.compile(optimizer = 'adam', loss='binary_crossentropy', metrics = ['accuracy'])

classifier.fit(X_train, y_train, batch_size=10, epochs=100)

eval_model = classifier.evaluate(X_train, y_train)
eval_model

y_pred = classifier.predict(X_test)
y_pred = (y_pred>0.5)

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test, y_pred)
print(cm)